buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.freeplane:gradle-freeplane-plugin:0.6'
    }
}

plugins {
    id "com.diffplug.spotless" version "6.0.5"
}

repositories {
    mavenCentral()
}

apply plugin: 'org.freeplane.gradle-freeplane-plugin'

dependencies {
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'org.xerial:sqlite-jdbc:3.40.1.0'
    implementation 'org.apache.groovy:groovy-all:4.0.6'
}

freeplane {
    // mandatory, freeplane installation directory.
    // (Freeplane.app directory on MacOS)
    freeplaneDirectory = System.env.FREEPLANE_DIR

    // optional, addon source directory
    addonSourceDirectory = 'src/addon'

    // optional, to be set only if more then one mind map file in the addon source directory
    // addonDefinitionMindMapFileName = 'Greetings.mm'

    // optional, includes
    // includes = ['**/*']

    // optional, excludes
    // excludes = ['**/*.bak', '**/~*', '**/$~*.mm~', '**/*.gdsl', '**/*.dsld']

    // optional, max heap size for freeplane
    // maxHeapSize = '1024m'

    // freeplane user setting directory
    userDirectory = System.env.FREEPLANE_USER_DIR

    // optional, additional Java Runtime options
    // jvmArgs = []

}

spotless {
    format 'misc', {
        target '*.md', '.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    groovy {
        greclipse().configFile('spotless.eclipseformat.xml')
    }
    groovyGradle {
        target '*.gradle'
        greclipse().configFile('spotless.eclipseformat.xml')
    }
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveFileName = 'freeplane-zotero.jar'
    // Add dependencies (excluding Freeplane itself) to the jar:
    from {
        configurations.compileClasspath.collect {
            if (!it.toString().startsWith(System.env.FREEPLANE_DIR)) {
                return it.isDirectory() ? it : zipTree(it)
            }
        }
    }
}
